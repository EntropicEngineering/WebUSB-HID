{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap e27600f7f7e4dd18dd7e","webpack:///./src/webUSB_HID.ts","webpack:///external {\"commonjs\":\"buffer\",\"commonjs2\":\"buffer\",\"amd\":\"buffer\",\"root\":\"_\"}","webpack:///external {\"commonjs\":\"binary-parser\",\"commonjs2\":\"binary-parser\",\"amd\":\"binary-parser\",\"root\":\"_\"}"],"names":[],"mappings":"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","file":"webusb_hid.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"buffer\"), require(\"binary-parser\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"buffer\", \"binary-parser\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"webUSB_HID\"] = factory(require(\"buffer\"), require(\"binary-parser\"));\n\telse\n\t\troot[\"webUSB_HID\"] = factory(root[\"_\"], root[\"_\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e27600f7f7e4dd18dd7e","/**\n * Created by riggs on 2017/9/1\n *\n * USB HID utility for WebUSB.\n */\n\nimport Buffer from 'buffer';\nimport Parser from 'binary-parser';\n\n\nfunction hex(buffer: ArrayBuffer) {\n    Array.from(new Uint8Array(buffer), arg => \"0x\" + arg.toString(16).padStart(2, \"0\")).join(\", \")\n}\n\nclass USBError extends Error {\n    constructor(message: any, status: WebUSB.USBTransferStatus) {\n        super(message);\n        this.name = 'USBError';\n        this.status = status;\n    }\n    status: WebUSB.USBTransferStatus;\n}\n\nenum HID_Class_Descriptors {\n    HID = 0x21,\n    Report = 0x22,\n    Physical = 0x23,\n}\n\nexport async function connect(...filters: WebUSB.USBDeviceFilter[]) {\n    if (filters.length === 0) {\n        filters = [{vendorId: 0x03eb}]\n    }\n\n    let device = await navigator.usb.requestDevice({filters});\n\n    await device.open();\n    if (device.configuration === null)\n        await device.selectConfiguration(0);\n    await device.claimInterface(0);\n\n    return device;\n}\n\nasync function get_HID_class_descriptor(device: WebUSB.USBDevice, type: number, index: number, length: number, interface_id = 0) {\n    let result = await device.controlTransferIn({\n        requestType: WebUSB.USBRequestType.standard,\n        recipient: WebUSB.USBRecipient.interface,\n        request: /* GET_DESCRIPTOR */ 0x06,\n        value: type * 256 + index,\n        index: interface_id\n    }, length);\n    if (result.status !== WebUSB.USBTransferStatus.ok) {\n        throw new USBError(\"HID descriptor transfer failed.\", result.status);\n    } else {\n        return result.data as DataView;\n    }\n}\n\nasync function get_HID_descriptor(device: WebUSB.USBDevice, interface_id = 0) {\n    let length = 9;\n    let data = await get_HID_class_descriptor(device, HID_Class_Descriptors.HID, 0, length, interface_id);\n\n    let returned_length = data.getUint8(0);\n\n    if (length < returned_length) {  /* Unlikely, but possible to have additional descriptors. */\n        length = returned_length;\n        data = await get_HID_class_descriptor(device, HID_Class_Descriptors.HID, 0, length, interface_id);\n    }\n\n    if (data.byteLength < length) {\n        throw new USBError(\"Invalid HID descriptor length: \" + hex(data.buffer), WebUSB.USBTransferStatus.ok);\n    }\n\n    return data;\n}\n\nlet BCD_version = new Parser()\n    .endianness(Parser.Endianness.little)\n    .uint8('major')\n    .bit4('minor')\n    .bit4('patch');\n\nfunction version(data_view: DataView) {\n    return BCD_version.parse(Buffer.from(data_view.buffer));\n}\n\nfunction decode_BCD(bcd_word: number) {\n    let major = Math.floor(bcd_word / 256);\n    let minor = Math.floor((bcd_word % 256) / 16);\n    let patch = (bcd_word % 256) % 16;\n    return [major, minor, patch];\n}\n\nlet HID_descriptor = new Parser()\n    .endianess(Parser.Endianness.little)\n    .uint8('length')\n    .uint8('type', {assert: HID_Class_Descriptors.HID})\n    .nest('version', {type: BCD_version})\n    .uint8('country_code')\n    .uint8('count', {assert: (count: number) => (count > 0)})\n    .array('descriptors', {\n        type: new Parser()\n            .endianess(Parser.Endianness.little)\n            .uint8('type', {formatter: (type: HID_Class_Descriptors) => HID_Class_Descriptors[type]})\n            .uint16('size'),\n        length: (parsed: Parser.Parsed)  => parsed.count\n    })\n    .array('extra', {\n        type: 'uint8',\n        readUntil: 'eof',\n        assert: (array: Array<number>) => (array.length === 0)\n    });\n\n// function parse_HID_descriptor(data_view: DataView) {\n//     const descriptor: {\n//         length: number | null,\n//         type: number | null,\n//         version: Array<number | null>,\n//         country_code: number | null,\n//         count: number | null,\n//         descriptors: []\n//     } = {\n//         length: null,\n//         type: null,\n//         version: [null, null, null],\n//         country_code: null,\n//         count: null,\n//         descriptors: []\n//     };\n//     descriptor.length = data_view.getUint8(0);\n//     descriptor.type = data_view.getUint8(1);\n//     if (descriptor.type !== HID_Class_Descriptors.HID) {\n//         throw Error(\"Invalid HID bDescriptorType at byte 1: \" + hex(data_view.buffer));\n//     }\n//     descriptor.version = decode_BCD(data_view.getUint16(2, true));\n//     descriptor.country_code = data_view.getUint8(4);\n//     /* TODO: Care about country code */\n//     descriptor.count = data_view.getUint8(5);\n//     let offset = 6;\n//     while (offset < descriptor.length) {\n//         try {\n//             let type = HID_Class_Descriptors[data_view.getUint8(offset)];\n//         } catch(e) {\n//             throw Error(\"Invalid HID bDescriptorType at byte `{offset}`: \" + hex(data_view.buffer));\n//         }\n//         let length = data_view.getUint16(offset + 1, true);\n//         descriptor.descriptors.push([])\n//     }\n//     return descriptor;\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./src/webUSB_HID.ts","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"buffer\",\"commonjs2\":\"buffer\",\"amd\":\"buffer\",\"root\":\"_\"}\n// module id = 1\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"binary-parser\",\"commonjs2\":\"binary-parser\",\"amd\":\"binary-parser\",\"root\":\"_\"}\n// module id = 2\n// module chunks = 0"],"sourceRoot":""}