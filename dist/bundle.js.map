{"version":3,"file":"bundle.js","sources":["../node_modules/improved-map/dist/improved-map.js","../node_modules/binary-structures/dist/es-bundle.js","HID_data.js","USB_data.js","parsers.js","simpleHID.js"],"sourcesContent":["Map.assign = function (target, ...sources) {\n    for (const source of sources) {\n        for (const [key, value] of source) {\n            target.set(key, value);\n        }\n    }\n    return target;\n};\nMap.prototype.update = function (...sources) {\n    return Map.assign(this, ...sources);\n};\nMap.prototype.toObject = function () {\n    const result = {};\n    for (const [key, value] of this) {\n        if (typeof key === \"string\" || typeof key === \"symbol\") {\n            result[key] = value;\n        }\n        else {\n            result[`${key}`] = value;\n        }\n    }\n    return result;\n};\nMap.prototype.pop = function (key, otherwise) {\n    if (!this.has(key)) {\n        return otherwise;\n    }\n    const value = this.get(key);\n    this.delete(key);\n    return value;\n};\n//# sourceMappingURL=improved-map.js.map","const hex = (value) => {\n    return \"0x\" + value.toString(16).toUpperCase().padStart(2, \"0\");\n};\nconst hex_buffer = (buffer) => {\n    return Array.from(new Uint8Array(buffer), hex).join(\", \");\n};\nconst utf8_encoder = new TextEncoder();\nconst utf8_decoder = new TextDecoder();\nconst Bits_Sizes = [1, 2, 3, 4, 5, 6, 7];\nconst Uint_Sizes = Bits_Sizes.concat([8, 16, 32, 64]);\nconst Int_Sizes = [8, 16, 32];\nconst Float_Sizes = [32, 64];\nconst write_bit_shift = (packer, value, { bits, data_view, byte_offset = 0, little_endian }) => {\n    /*\n     bit_offset = 5\n     buffer = 00011111\n     byte = xxxxxxxx\n\n     new_buffer = 000xxxxx xxx11111\n     */\n    const bit_offset = (byte_offset % 1) * 8;\n    byte_offset = Math.floor(byte_offset);\n    const bytes = new Uint8Array(Math.ceil(bits / 8));\n    const bit_length = packer(value, { bits, byte_offset: 0, data_view: new DataView(bytes.buffer), little_endian });\n    let overlap = data_view.getUint8(byte_offset) & (0xFF >> (8 - bit_offset));\n    for (const [index, byte] of bytes.entries()) {\n        data_view.setUint8(byte_offset + index, ((byte << bit_offset) & 0xFF) | overlap);\n        overlap = byte >> (8 - bit_offset);\n    }\n    if (bit_offset + bits > 8) {\n        data_view.setUint8(byte_offset + Math.ceil(bits / 8), overlap);\n    }\n    return bit_length;\n};\nconst read_bit_shift = (parser, { bits, data_view, byte_offset = 0, little_endian }) => {\n    const bit_offset = (byte_offset % 1) * 8;\n    byte_offset = Math.floor(byte_offset);\n    const bytes = new Uint8Array(Math.ceil(bits / 8));\n    let byte = data_view.getUint8(byte_offset);\n    if (bit_offset + bits > 8) {\n        for (const index of bytes.keys()) {\n            const next = data_view.getUint8(byte_offset + index + 1);\n            bytes[index] = (byte >> bit_offset) | ((next << (8 - bit_offset)) & (0xFF >> (bits < 8 ? (8 - bits) : 0)));\n            byte = next;\n        }\n    }\n    else {\n        bytes[0] = byte >> bit_offset & (0xFF >> (8 - bits));\n    }\n    return parser({ bits, byte_offset: 0, data_view: new DataView(bytes.buffer), little_endian });\n};\nconst uint_pack = (value, { bits, data_view, byte_offset = 0, little_endian }) => {\n    const original_value = value;\n    value = Math.floor(original_value);\n    if (value < 0 || value > 2 ** bits || original_value !== value || value > Number.MAX_SAFE_INTEGER) {\n        throw new Error(`Unable to encode ${original_value} to Uint${bits}`);\n    }\n    if (byte_offset % 1) {\n        return write_bit_shift(uint_pack, value, { bits, data_view, byte_offset, little_endian });\n    }\n    else {\n        switch (bits) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n                data_view.setUint8(byte_offset, value);\n                break;\n            case 16:\n                data_view.setUint16(byte_offset, value, little_endian);\n                break;\n            case 32:\n                data_view.setUint32(byte_offset, value, little_endian);\n                break;\n            case 64:/* Special case to handle millisecond epoc time (from Date.now()) */ \n                const upper = Math.floor(value / 2 ** 32);\n                const lower = value % 2 ** 32;\n                let low_byte;\n                let high_byte;\n                if (little_endian) {\n                    low_byte = lower;\n                    high_byte = upper;\n                }\n                else {\n                    low_byte = upper;\n                    high_byte = lower;\n                }\n                data_view.setUint32(byte_offset, low_byte, little_endian);\n                data_view.setUint32(byte_offset + 4, high_byte, little_endian);\n                break;\n            default:\n                throw new Error(`Invalid size: ${bits}`);\n        }\n        return bits;\n    }\n};\nconst uint_parse = ({ bits, data_view, byte_offset = 0, little_endian }) => {\n    if (byte_offset % 1) {\n        return read_bit_shift(uint_parse, { bits, data_view, byte_offset, little_endian });\n    }\n    else {\n        switch (bits) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n                return data_view.getUint8(byte_offset) & (0xFF >> (8 - bits));\n            case 8:\n                return data_view.getUint8(byte_offset);\n            case 16:\n                return data_view.getUint16(byte_offset, little_endian);\n            case 32:\n                return data_view.getUint32(byte_offset, little_endian);\n            case 64:/* Special case to handle millisecond epoc time (from Date.now()) */ \n                const low_byte = data_view.getUint32(byte_offset, little_endian);\n                const high_byte = data_view.getUint32(byte_offset + 4, little_endian);\n                let value;\n                if (little_endian) {\n                    value = high_byte * 2 ** 32 + low_byte;\n                }\n                else {\n                    value = low_byte * 2 ** 32 + high_byte;\n                }\n                if (value > Number.MAX_SAFE_INTEGER) {\n                    throw new Error(`Uint64 out of range for Javascript: ${hex_buffer(data_view.buffer.slice(byte_offset, byte_offset + 8))}`);\n                }\n                return value;\n            default:\n                throw new Error(`Invalid size: ${bits}`);\n        }\n    }\n};\nconst int_pack = (value, { bits, data_view, byte_offset = 0, little_endian }) => {\n    const original_value = value;\n    value = Math.floor(original_value);\n    if (value < -(2 ** (bits - 1)) || value > 2 ** (bits - 1) - 1 || original_value !== value) {\n        throw new Error(`Unable to encode ${original_value} to Int${bits}`);\n    }\n    if (byte_offset % 1) {\n        return write_bit_shift(int_pack, value, { bits, data_view, byte_offset, little_endian });\n    }\n    else {\n        switch (bits) {\n            case 8:\n                data_view.setUint8(byte_offset, value);\n                break;\n            case 16:\n                data_view.setUint16(byte_offset, value, little_endian);\n                break;\n            case 32:\n                data_view.setUint32(byte_offset, value, little_endian);\n                break;\n            default:\n                throw new Error(`Invalid size: ${bits}`);\n        }\n        return bits;\n    }\n};\nconst int_parse = ({ bits, data_view, byte_offset = 0, little_endian }) => {\n    if (byte_offset % 1) {\n        return read_bit_shift(int_parse, { bits, data_view, byte_offset, little_endian });\n    }\n    else {\n        switch (bits) {\n            case 8:\n                return data_view.getInt8(byte_offset);\n            case 16:\n                return data_view.getInt16(byte_offset, little_endian);\n            case 32:\n                return data_view.getInt32(byte_offset, little_endian);\n            default:\n                throw new Error(`Invalid size: ${bits}`);\n        }\n    }\n};\nconst float_pack = (value, { bits, data_view, byte_offset = 0, little_endian }) => {\n    /* TODO: Input validation */\n    if (byte_offset % 1) {\n        return write_bit_shift(float_pack, value, { bits, data_view, byte_offset, little_endian });\n    }\n    else {\n        switch (bits) {\n            case 32:\n                data_view.setFloat32(byte_offset, value, little_endian);\n                break;\n            case 64:\n                data_view.setFloat64(byte_offset, value, little_endian);\n                break;\n            default:\n                throw new Error(`Invalid size: ${bits}`);\n        }\n        return bits;\n    }\n};\nconst float_parse = ({ bits, data_view, byte_offset = 0, little_endian }) => {\n    if (byte_offset % 1) {\n        return read_bit_shift(float_parse, { bits, data_view, byte_offset, little_endian });\n    }\n    else {\n        switch (bits) {\n            case 32:\n                return data_view.getFloat32(byte_offset, little_endian);\n            case 64:\n                return data_view.getFloat64(byte_offset, little_endian);\n            default:\n                throw new Error(`Invalid size: ${bits}`);\n        }\n    }\n};\nconst utf8_pack = (value, { bits, data_view, byte_offset = 0 }) => {\n    if (byte_offset % 1) {\n        return write_bit_shift(utf8_pack, value, { bits, data_view, byte_offset });\n    }\n    else {\n        const byte_array = utf8_encoder.encode(value);\n        const byte_length = byte_array.byteLength;\n        if (bits > 0 && byte_length > bits / 8) {\n            throw new Error(`Input string serializes to longer than ${bits / 8} bytes:\\n${value}`);\n        }\n        if (byte_length + byte_offset > data_view.byteLength) {\n            throw new Error(`Insufficient space in ArrayBuffer to store length ${byte_length} string:\\n${value}`);\n        }\n        for (const [index, byte] of byte_array.entries()) {\n            data_view.setUint8(byte_offset + index, byte);\n        }\n        return byte_length * 8;\n    }\n};\nconst utf8_parse = ({ bits, data_view, byte_offset = 0 }) => {\n    if (byte_offset % 1) {\n        return read_bit_shift(utf8_parse, { bits, data_view, byte_offset });\n    }\n    else {\n        return utf8_decoder.decode(new DataView(data_view.buffer, byte_offset, bits ? bits / 8 : undefined));\n    }\n};\n\nconst Parent = '$parent';\nconst set_context = (data, context) => {\n    if (context !== undefined) {\n        data[Parent] = context;\n    }\n    return data;\n};\nconst remove_context = (data, delete_flag) => {\n    if (delete_flag) {\n        delete data[Parent];\n    }\n    return data;\n};\nconst inspect_transcoder = (data, context) => {\n    console.log({ data, context });\n    return data;\n};\nconst inspect = {\n    encode: inspect_transcoder,\n    decode: inspect_transcoder,\n};\nconst fetch_and_encode = ({ source, encode, context }) => {\n    let decoded;\n    if (typeof source === 'function') {\n        decoded = source();\n    }\n    else {\n        decoded = source;\n    }\n    if (typeof encode === 'function') {\n        return encode(decoded, context);\n    }\n    else {\n        return decoded;\n    }\n};\nconst decode_and_deliver = ({ encoded, decode, context, deliver }) => {\n    let decoded;\n    if (typeof decode === 'function') {\n        decoded = decode(encoded, context);\n    }\n    else {\n        decoded = encoded;\n    }\n    if (typeof deliver === 'function') {\n        deliver(decoded);\n    }\n    return decoded;\n};\nconst factory = (serializer, deserializer, verify_size) => {\n    return ((bits, transcoders = {}) => {\n        if (!verify_size(bits)) {\n            throw new Error(`Invalid size: ${bits}`);\n        }\n        const { encode, decode, little_endian: LE } = transcoders;\n        const pack = (source, options = {}) => {\n            const { data_view = new DataView(new ArrayBuffer(Math.ceil(bits / 8))), byte_offset = 0, little_endian = LE, context } = options;\n            const encoded = fetch_and_encode({ source, encode, context });\n            const size = (serializer(encoded, { bits, data_view, byte_offset, little_endian }) / 8);\n            return { size, buffer: data_view.buffer };\n        };\n        const parse = (data_view, options = {}, deliver) => {\n            const { byte_offset = 0, little_endian = LE, context } = options;\n            const encoded = deserializer({ bits, data_view, byte_offset, little_endian });\n            const data = decode_and_deliver({ encoded, context, decode, deliver });\n            return { data, size: bits / 8 };\n        };\n        return { pack, parse };\n    });\n};\nconst Bits = factory(uint_pack, uint_parse, (s) => Bits_Sizes.includes(s));\nconst Uint = factory(uint_pack, uint_parse, (s) => Uint_Sizes.includes(s));\nconst Int = factory(int_pack, int_parse, (s) => Int_Sizes.includes(s));\nconst Float = factory(float_pack, float_parse, (s) => Float_Sizes.includes(s));\nconst Utf8 = factory(utf8_pack, utf8_parse, (s) => s % 8 === 0 && s >= 0);\nconst numeric = (n, context, type = 'B') => {\n    if (typeof n === 'object') {\n        let { bits = 0, bytes = 0 } = n;\n        n = type === 'B' ? bits / 8 + bytes : bits + bytes * 8;\n    }\n    else if (typeof n === 'function') {\n        n = n(context);\n    }\n    else if (typeof n !== 'number') {\n        throw new Error(`Invalid numeric input ${n}`);\n    }\n    if (n < 0) {\n        throw new Error(`Invalid size: ${n} bytes`);\n    }\n    return n;\n};\n/** Byte_Buffer doesn't do any serialization, but just copies bytes to/from an ArrayBuffer that's a subset of the\n * serialized buffer. Byte_Buffer only works on byte-aligned data.\n *\n * @param {Numeric} length\n * @param {Transcoders<ArrayBuffer, any>} transcoders\n */\nconst Byte_Buffer = (length, transcoders = {}) => {\n    const { encode, decode } = transcoders;\n    const pack = (source, options = {}) => {\n        const { data_view, byte_offset = 0, context } = options;\n        const size = numeric(length, context);\n        const buffer = fetch_and_encode({ source, encode, context });\n        if (size !== buffer.byteLength) {\n            throw new Error(`Length miss-match. Expected length: ${size}, actual bytelength: ${buffer.byteLength}`);\n        }\n        if (data_view === undefined) {\n            return { size, buffer };\n        }\n        new Uint8Array(buffer).forEach((value, index) => {\n            data_view.setUint8(byte_offset + index, value);\n        });\n        return { size, buffer: data_view.buffer };\n    };\n    const parse = (data_view, options = {}, deliver) => {\n        const { byte_offset = 0, context } = options;\n        const size = numeric(length, context);\n        const buffer = data_view.buffer.slice(byte_offset, byte_offset + size);\n        const data = decode_and_deliver({ encoded: buffer, context, decode, deliver });\n        return { data, size };\n    };\n    return { pack, parse };\n};\nconst Padding = (bits, transcoders = {}) => {\n    const { encode, decode } = transcoders;\n    const pack = (source, options = {}) => {\n        let { data_view, byte_offset = 0, context } = options;\n        const size = numeric(bits, context, 'b');\n        if (data_view === undefined) {\n            data_view = new DataView(new ArrayBuffer(Math.ceil(size / 8)));\n        }\n        if (encode !== undefined) {\n            let fill = encode(null, options.context);\n            let i = 0;\n            while (i < Math.floor(size / 8)) {\n                data_view.setUint8(byte_offset + i, fill);\n                fill >>= 8;\n                i++;\n            }\n            const remainder = size % 8;\n            if (remainder) {\n                data_view.setUint8(byte_offset + i, fill & (2 ** remainder - 1));\n            }\n        }\n        return { size: size / 8, buffer: data_view.buffer };\n    };\n    const parse = (data_view, options = {}, deliver) => {\n        const { context } = options;\n        const size = numeric(bits, context, 'b');\n        let data = null;\n        if (decode !== undefined) {\n            data = decode(data, context);\n            if (deliver !== undefined) {\n                deliver(data);\n            }\n        }\n        return { size: size / 8, data };\n    };\n    return { pack, parse };\n};\nconst Branch = ({ chooser, choices, default_choice }) => {\n    const choose = (source) => {\n        let choice = chooser(source);\n        if (choices.hasOwnProperty(choice)) {\n            return choices[choice];\n        }\n        else {\n            if (default_choice !== undefined) {\n                return default_choice;\n            }\n            else {\n                throw new Error(`Choice ${choice} not in ${Object.keys(choices)}`);\n            }\n        }\n    };\n    const pack = (source, options = {}) => {\n        return choose(options.context).pack(source, options);\n    };\n    const parse = (data_view, options = {}, deliver) => {\n        return choose(options.context).parse(data_view, options, deliver);\n    };\n    return { parse, pack };\n};\nconst Embed = (embedded) => {\n    const pack = (source, { byte_offset, data_view, little_endian, context } = {}) => {\n        if (context !== undefined) {\n            const parent = context[Parent];\n            if (embedded instanceof Array) {\n                return embedded\n                    .pack(context, { byte_offset, data_view, little_endian, context: parent }, source);\n            }\n            else if (embedded instanceof Map) {\n                return embedded\n                    .pack(context, { byte_offset, data_view, little_endian, context: parent }, context);\n            }\n        }\n        return embedded.pack(source, { byte_offset, data_view, little_endian, context });\n    };\n    const parse = (data_view, { byte_offset, little_endian, context } = {}, deliver) => {\n        if (context !== undefined) {\n            const parent = context[Parent];\n            if (embedded instanceof Array) {\n                return embedded\n                    .parse(data_view, { byte_offset, little_endian, context: parent }, undefined, context);\n            }\n            else if (embedded instanceof Map) {\n                return embedded\n                    .parse(data_view, { byte_offset, little_endian, context: parent }, undefined, context);\n            }\n        }\n        return embedded.parse(data_view, { byte_offset, little_endian, context }, deliver);\n    };\n    return { pack, parse };\n};\nconst Binary_Map = (transcoders = {}, iterable) => {\n    if (transcoders instanceof Array) {\n        [transcoders, iterable] = [iterable, transcoders];\n    }\n    const { encode, decode, little_endian: LE } = transcoders;\n    const map = new Map((iterable || []));\n    map.pack = (source, options = {}, encoded) => {\n        const packed = [];\n        let { data_view, byte_offset = 0, little_endian = LE, context } = options;\n        if (encoded === undefined) {\n            encoded = fetch_and_encode({ source, encode, context });\n            set_context(encoded, context);\n        }\n        /* Need to return a function to the `pack` chain to enable Embed with value checking. */\n        const fetcher = (key) => () => {\n            const value = encoded.get(key);\n            if (value === undefined) {\n                throw new Error(`Insufficient data for serialization: ${key} not in ${encoded}`);\n            }\n            return value;\n        };\n        let offset = 0;\n        for (const [key, item] of map) {\n            const { size, buffer } = item.pack(fetcher(key), { data_view, byte_offset: data_view === undefined ? 0 : byte_offset + offset, little_endian, context: encoded });\n            if (data_view === undefined) {\n                packed.push({ size, buffer });\n            }\n            offset += size;\n        }\n        if (data_view === undefined) {\n            data_view = concat_buffers(packed, offset);\n        }\n        return { size: offset, buffer: data_view.buffer };\n    };\n    map.parse = (data_view, options = {}, deliver, results) => {\n        const { byte_offset = 0, little_endian = LE, context } = options;\n        let remove_parent_symbol = false;\n        if (results === undefined) {\n            results = set_context(new Map(), context);\n            remove_parent_symbol = true;\n        }\n        let offset = 0;\n        for (const [key, item] of map) {\n            const { data, size } = item.parse(data_view, { byte_offset: byte_offset + offset, little_endian, context: results }, (data) => results.set(key, data));\n            offset += size;\n        }\n        const data = decode_and_deliver({ encoded: results, decode, context, deliver });\n        remove_context(results, remove_parent_symbol);\n        return { data, size: offset };\n    };\n    return map;\n};\nconst concat_buffers = (packed, byte_length) => {\n    const data_view = new DataView(new ArrayBuffer(Math.ceil(byte_length)));\n    let byte_offset = 0;\n    for (const { size, buffer } of packed) {\n        /* Copy all the data from the returned buffers into one grand buffer. */\n        const bytes = Array.from(new Uint8Array(buffer));\n        /* Create a Byte Array with the appropriate number of Uint(8)s, possibly with a trailing Bits. */\n        const array = Binary_Array();\n        for (let i = 0; i < Math.floor(size); i++) {\n            array.push(Uint(8));\n        }\n        if (size % 1) {\n            array.push(Bits((size % 1) * 8));\n        }\n        /* Pack the bytes into the buffer */\n        array.pack(bytes, { data_view, byte_offset });\n        byte_offset += size;\n    }\n    return data_view;\n};\n/* This would be much cleaner if JavaScript had interfaces. Or I could make everything subclass Struct... */\nconst extract_array_options = (elements = []) => {\n    if (elements.length > 0) {\n        const first = elements[0];\n        if (!first.hasOwnProperty('pack') && !first.hasOwnProperty('parse')) {\n            return elements.shift();\n        }\n        const last = elements[elements.length - 1];\n        if (!last.hasOwnProperty('pack') && !last.hasOwnProperty('parse')) {\n            return elements.pop();\n        }\n    }\n    return {};\n};\nconst Binary_Array = (...elements) => {\n    const { encode, decode, little_endian: LE } = extract_array_options(elements);\n    const array = new Array(...elements);\n    array.pack = (source, options = {}, fetcher) => {\n        let { data_view, byte_offset = 0, little_endian = LE, context } = options;\n        const encoded = fetch_and_encode({ source, encode, context });\n        const packed = [];\n        if (fetcher === undefined) {\n            set_context(encoded, context);\n            const iterator = encoded[Symbol.iterator]();\n            fetcher = () => {\n                const value = iterator.next().value;\n                if (value === undefined) {\n                    throw new Error(`Insufficient data for serialization: ${encoded}`);\n                }\n                return value;\n            };\n        }\n        const store = (result) => {\n            if (data_view === undefined) {\n                packed.push(result);\n            }\n        };\n        const size = array.__pack_loop(fetcher, { data_view, byte_offset, little_endian, context: encoded }, store, context);\n        if (data_view === undefined) {\n            data_view = concat_buffers(packed, size);\n        }\n        return { size, buffer: data_view.buffer };\n    };\n    array.__pack_loop = (fetcher, { data_view, byte_offset = 0, little_endian, context }, store) => {\n        let offset = 0;\n        for (const item of array) {\n            const { size, buffer } = item.pack(fetcher, { data_view, byte_offset: data_view === undefined ? 0 : byte_offset + offset, little_endian, context });\n            store({ size, buffer });\n            offset += size;\n        }\n        return offset;\n    };\n    array.parse = (data_view, options = {}, deliver, results) => {\n        const { byte_offset = 0, little_endian = LE, context } = options;\n        let remove_parent_symbol = false;\n        if (results === undefined) {\n            results = set_context(new Array(), context);\n            remove_parent_symbol = true;\n        }\n        const size = array.__parse_loop(data_view, { byte_offset, little_endian, context: results }, (data) => results.push(data), context);\n        const data = decode_and_deliver({ encoded: remove_context(results, remove_parent_symbol), context, decode, deliver });\n        return { data, size };\n    };\n    array.__parse_loop = (data_view, { byte_offset = 0, little_endian, context }, deliver) => {\n        let offset = 0;\n        for (const item of array) {\n            const { data, size } = item.parse(data_view, { byte_offset: byte_offset + offset, little_endian, context }, deliver);\n            offset += size;\n        }\n        return offset;\n    };\n    return array;\n};\nconst Repeat = (...elements) => {\n    const { count, bytes, encode, decode, little_endian } = extract_array_options(elements);\n    const array = Binary_Array({ encode, decode, little_endian }, ...elements);\n    const pack_loop = array.__pack_loop;\n    const parse_loop = array.__parse_loop;\n    array.__pack_loop = (fetcher, { data_view, byte_offset = 0, little_endian, context }, store, parent) => {\n        let offset = 0;\n        if (count !== undefined) {\n            const repeat = numeric(count, parent);\n            for (let i = 0; i < repeat; i++) {\n                offset += pack_loop(fetcher, { data_view, byte_offset: byte_offset + offset, little_endian, context }, store);\n            }\n        }\n        else if (bytes !== undefined) {\n            const repeat = numeric(bytes, parent);\n            while (offset < repeat) {\n                offset += pack_loop(fetcher, { data_view, byte_offset: byte_offset + offset, little_endian, context }, store);\n            }\n            if (offset > repeat) {\n                throw new Error(`Cannot pack into ${repeat} bytes.`);\n            }\n        }\n        else {\n            throw new Error(\"One of count or bytes must specified in options.\");\n        }\n        return offset;\n    };\n    array.__parse_loop = (data_view, { byte_offset = 0, little_endian, context }, deliver, parent) => {\n        let offset = 0;\n        if (count !== undefined) {\n            const repeat = numeric(count, parent);\n            for (let i = 0; i < repeat; i++) {\n                offset += parse_loop(data_view, { byte_offset: byte_offset + offset, little_endian, context }, deliver);\n            }\n        }\n        else if (bytes !== undefined) {\n            const repeat = numeric(bytes, parent);\n            while (offset < repeat) {\n                offset += parse_loop(data_view, { byte_offset: byte_offset + offset, little_endian, context }, deliver);\n            }\n            if (offset > repeat) {\n                throw new Error(`Cannot parse exactly ${repeat} bytes.`);\n            }\n        }\n        else {\n            throw new Error(\"One of count or bytes must specified in options.\");\n        }\n        return offset;\n    };\n    return array;\n};\n\nconst Uint8 = Uint(8);\nconst Uint16 = Uint(16);\nconst Uint16LE = Uint(16, { little_endian: true });\nconst Uint16BE = Uint16;\nconst Uint32 = Uint(32);\nconst Uint32LE = Uint(32, { little_endian: true });\nconst Uint32BE = Uint32;\nconst Uint64 = Uint(64);\nconst Uint64LE = Uint(64, { little_endian: true });\nconst Uint64BE = Uint64;\nconst Int8 = Int(8);\nconst Int16 = Int(8);\nconst Int16LE = Int(16, { little_endian: true });\nconst Int16BE = Int16;\nconst Int32 = Int(32);\nconst Int32LE = Int(32, { little_endian: true });\nconst Int32BE = Int32;\nconst Float32 = Float(32);\nconst Float32LE = Float(32, { little_endian: true });\nconst Float32BE = Float32;\nconst Float64 = Float(64);\nconst Float64LE = Float(64, { little_endian: true });\nconst Float64BE = Float64;\n/** Noöp structure\n *\n * @type {Struct}\n */\nconst Pass = Padding(0);\n\nexport { Uint8, Uint16, Uint16LE, Uint16BE, Uint32, Uint32LE, Uint32BE, Uint64, Uint64LE, Uint64BE, Int8, Int16, Int16LE, Int16BE, Int32, Int32LE, Int32BE, Float32, Float32LE, Float32BE, Float64, Float64LE, Float64BE, Pass, hex, hex_buffer, inspect, Parent, Bits, Uint, Int, Float, Utf8, Embed, Binary_Array, Binary_Map, Byte_Buffer, Repeat, Branch, Padding };\n//# sourceMappingURL=es-bundle.js.map\n","export var Class_Descriptors;\n(function (Class_Descriptors) {\n    Class_Descriptors[Class_Descriptors[\"HID\"] = 33] = \"HID\";\n    Class_Descriptors[Class_Descriptors[\"Report\"] = 34] = \"Report\";\n    Class_Descriptors[Class_Descriptors[\"Physical\"] = 35] = \"Physical\";\n})(Class_Descriptors || (Class_Descriptors = {}));\nexport var Descriptor_Request;\n(function (Descriptor_Request) {\n    Descriptor_Request[Descriptor_Request[\"GET\"] = 6] = \"GET\";\n    Descriptor_Request[Descriptor_Request[\"SET\"] = 7] = \"SET\";\n})(Descriptor_Request || (Descriptor_Request = {}));\nexport var Report_Item_Type;\n(function (Report_Item_Type) {\n    Report_Item_Type[Report_Item_Type[\"Main\"] = 0] = \"Main\";\n    Report_Item_Type[Report_Item_Type[\"Global\"] = 1] = \"Global\";\n    Report_Item_Type[Report_Item_Type[\"Local\"] = 2] = \"Local\";\n    /* Reserved = 0b11 */\n})(Report_Item_Type || (Report_Item_Type = {}));\nexport var Report_Main_Item_Tag;\n(function (Report_Main_Item_Tag) {\n    Report_Main_Item_Tag[Report_Main_Item_Tag[\"Input\"] = 8] = \"Input\";\n    Report_Main_Item_Tag[Report_Main_Item_Tag[\"Output\"] = 9] = \"Output\";\n    Report_Main_Item_Tag[Report_Main_Item_Tag[\"Feature\"] = 11] = \"Feature\";\n    Report_Main_Item_Tag[Report_Main_Item_Tag[\"Collection\"] = 10] = \"Collection\";\n    Report_Main_Item_Tag[Report_Main_Item_Tag[\"End_Collection\"] = 12] = \"End_Collection\";\n})(Report_Main_Item_Tag || (Report_Main_Item_Tag = {}));\nexport var Collection_Type;\n(function (Collection_Type) {\n    Collection_Type[Collection_Type[\"Physical\"] = 0] = \"Physical\";\n    Collection_Type[Collection_Type[\"Application\"] = 1] = \"Application\";\n    Collection_Type[Collection_Type[\"Logical\"] = 2] = \"Logical\";\n    Collection_Type[Collection_Type[\"Report\"] = 3] = \"Report\";\n    Collection_Type[Collection_Type[\"Named_Array\"] = 4] = \"Named_Array\";\n    Collection_Type[Collection_Type[\"Usage_Switch\"] = 5] = \"Usage_Switch\";\n    Collection_Type[Collection_Type[\"Usage_Modifier\"] = 6] = \"Usage_Modifier\";\n    /* Reserved         = 0x07-0x7F */\n    /* Vendor Defined   = 0x80-0xFF */\n})(Collection_Type || (Collection_Type = {}));\nexport var Report_Global_Item_Tag;\n(function (Report_Global_Item_Tag) {\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Usage_Page\"] = 0] = \"Usage_Page\";\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Logical_Minimum\"] = 1] = \"Logical_Minimum\";\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Logical_Maximum\"] = 2] = \"Logical_Maximum\";\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Physical_Minimum\"] = 3] = \"Physical_Minimum\";\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Physical_Maximum\"] = 4] = \"Physical_Maximum\";\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Unit_Exponent\"] = 5] = \"Unit_Exponent\";\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Unit\"] = 6] = \"Unit\";\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Report_Size\"] = 7] = \"Report_Size\";\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Report_ID\"] = 8] = \"Report_ID\";\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Report_Count\"] = 9] = \"Report_Count\";\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Push\"] = 10] = \"Push\";\n    Report_Global_Item_Tag[Report_Global_Item_Tag[\"Pop\"] = 11] = \"Pop\";\n})(Report_Global_Item_Tag || (Report_Global_Item_Tag = {}));\nexport var Report_Local_Item_Tag;\n(function (Report_Local_Item_Tag) {\n    Report_Local_Item_Tag[Report_Local_Item_Tag[\"Usage\"] = 0] = \"Usage\";\n    Report_Local_Item_Tag[Report_Local_Item_Tag[\"Usage_Minimum\"] = 1] = \"Usage_Minimum\";\n    Report_Local_Item_Tag[Report_Local_Item_Tag[\"Usage_Maximum\"] = 2] = \"Usage_Maximum\";\n    Report_Local_Item_Tag[Report_Local_Item_Tag[\"Designator_Index\"] = 3] = \"Designator_Index\";\n    Report_Local_Item_Tag[Report_Local_Item_Tag[\"Designator_Minimum\"] = 4] = \"Designator_Minimum\";\n    Report_Local_Item_Tag[Report_Local_Item_Tag[\"Designator_Maximum\"] = 5] = \"Designator_Maximum\";\n    Report_Local_Item_Tag[Report_Local_Item_Tag[\"String_Index\"] = 7] = \"String_Index\";\n    Report_Local_Item_Tag[Report_Local_Item_Tag[\"String_Minimum\"] = 8] = \"String_Minimum\";\n    Report_Local_Item_Tag[Report_Local_Item_Tag[\"String_Maximum\"] = 9] = \"String_Maximum\";\n    Report_Local_Item_Tag[Report_Local_Item_Tag[\"Delimiter\"] = 10] = \"Delimiter\";\n})(Report_Local_Item_Tag || (Report_Local_Item_Tag = {}));\nexport var Request_Type;\n(function (Request_Type) {\n    Request_Type[Request_Type[\"GET_REPORT\"] = 1] = \"GET_REPORT\";\n    Request_Type[Request_Type[\"GET_IDLE\"] = 2] = \"GET_IDLE\";\n    Request_Type[Request_Type[\"GET_PROTOCOL\"] = 3] = \"GET_PROTOCOL\";\n    Request_Type[Request_Type[\"SET_REPORT\"] = 9] = \"SET_REPORT\";\n    Request_Type[Request_Type[\"SET_IDLE\"] = 10] = \"SET_IDLE\";\n    Request_Type[Request_Type[\"SET_PROTOCOL\"] = 11] = \"SET_PROTOCOL\";\n})(Request_Type || (Request_Type = {}));\nexport var Request_Report_Type;\n(function (Request_Report_Type) {\n    Request_Report_Type[Request_Report_Type[\"Input\"] = 1] = \"Input\";\n    Request_Report_Type[Request_Report_Type[\"Output\"] = 2] = \"Output\";\n    Request_Report_Type[Request_Report_Type[\"Feature\"] = 3] = \"Feature\";\n})(Request_Report_Type || (Request_Report_Type = {}));\n//# sourceMappingURL=HID_data.js.map","export var Descriptor_Type;\n(function (Descriptor_Type) {\n    Descriptor_Type[Descriptor_Type[\"DEVICE\"] = 1] = \"DEVICE\";\n    Descriptor_Type[Descriptor_Type[\"CONFIGURATION\"] = 2] = \"CONFIGURATION\";\n    Descriptor_Type[Descriptor_Type[\"STRING\"] = 3] = \"STRING\";\n    Descriptor_Type[Descriptor_Type[\"INTERFACE\"] = 4] = \"INTERFACE\";\n    Descriptor_Type[Descriptor_Type[\"ENDPOINT\"] = 5] = \"ENDPOINT\";\n    /* Reserved             = 6, */\n    /* Reserved             = 7, */\n    Descriptor_Type[Descriptor_Type[\"INTERFACE_POWER\"] = 8] = \"INTERFACE_POWER\";\n    Descriptor_Type[Descriptor_Type[\"OTG\"] = 9] = \"OTG\";\n    Descriptor_Type[Descriptor_Type[\"DEBUG\"] = 10] = \"DEBUG\";\n    Descriptor_Type[Descriptor_Type[\"INTERFACE_ASSOCIATION\"] = 11] = \"INTERFACE_ASSOCIATION\";\n    Descriptor_Type[Descriptor_Type[\"BOS\"] = 15] = \"BOS\";\n    Descriptor_Type[Descriptor_Type[\"DEVICE_CAPABILITY\"] = 16] = \"DEVICE_CAPABILITY\";\n})(Descriptor_Type || (Descriptor_Type = {}));\nexport var Request_Type;\n(function (Request_Type) {\n    Request_Type[Request_Type[\"GET_STATUS\"] = 0] = \"GET_STATUS\";\n    Request_Type[Request_Type[\"CLEAR_FEATURE\"] = 1] = \"CLEAR_FEATURE\";\n    /* Reserved             = 2, */\n    Request_Type[Request_Type[\"SET_FEATURE\"] = 3] = \"SET_FEATURE\";\n    /* Reserved             = 4, */\n    Request_Type[Request_Type[\"SET_ADDRESS\"] = 5] = \"SET_ADDRESS\";\n    Request_Type[Request_Type[\"GET_DESCRIPTOR\"] = 6] = \"GET_DESCRIPTOR\";\n    Request_Type[Request_Type[\"SET_DESCRIPTOR\"] = 7] = \"SET_DESCRIPTOR\";\n    Request_Type[Request_Type[\"GET_CONFIGURATION\"] = 8] = \"GET_CONFIGURATION\";\n    Request_Type[Request_Type[\"SET_CONFIGURATION\"] = 9] = \"SET_CONFIGURATION\";\n    Request_Type[Request_Type[\"GET_INTERFACE\"] = 10] = \"GET_INTERFACE\";\n    Request_Type[Request_Type[\"SET_INTERFACE\"] = 11] = \"SET_INTERFACE\";\n    /* Further request types left as an exercise to the reader */\n})(Request_Type || (Request_Type = {}));\nexport var Capability_Type;\n(function (Capability_Type) {\n    /* Reserved             = 0x00, */\n    Capability_Type[Capability_Type[\"Wireless_USB\"] = 1] = \"Wireless_USB\";\n    Capability_Type[Capability_Type[\"USB_2_0_Extension\"] = 2] = \"USB_2_0_Extension\";\n    Capability_Type[Capability_Type[\"SUPERSPEED_USB\"] = 3] = \"SUPERSPEED_USB\";\n    Capability_Type[Capability_Type[\"CONTAINER_ID\"] = 4] = \"CONTAINER_ID\";\n    Capability_Type[Capability_Type[\"PLATFORM\"] = 5] = \"PLATFORM\";\n    Capability_Type[Capability_Type[\"POWER_DELIVERY_CAPABILITY\"] = 6] = \"POWER_DELIVERY_CAPABILITY\";\n    Capability_Type[Capability_Type[\"BATTERY_INFO_CAPABILITY\"] = 7] = \"BATTERY_INFO_CAPABILITY\";\n    Capability_Type[Capability_Type[\"PD_CONSUMER_PORT_CAPABILITY\"] = 8] = \"PD_CONSUMER_PORT_CAPABILITY\";\n    Capability_Type[Capability_Type[\"PD_PROVIDER_PORT_CAPABILITY\"] = 9] = \"PD_PROVIDER_PORT_CAPABILITY\";\n    Capability_Type[Capability_Type[\"SUPERSPEED_PLUS\"] = 10] = \"SUPERSPEED_PLUS\";\n    Capability_Type[Capability_Type[\"PRECISION_TIME_MEASUREMENT\"] = 11] = \"PRECISION_TIME_MEASUREMENT\";\n    Capability_Type[Capability_Type[\"Wireless_USB_Ext\"] = 12] = \"Wireless_USB_Ext\";\n    /* Reserved             = 0x0D-0xFF */\n})(Capability_Type || (Capability_Type = {}));\n//# sourceMappingURL=USB_data.js.map","import 'improved-map';\nimport * as HID from './HID_data';\nimport * as USB from './USB_data';\nimport { Pass, Binary_Map, Byte_Buffer, Bits, Uint, Uint8, Uint16LE, Uint32LE, Int8, Int16LE, Int32LE, Embed, Padding, Branch, Repeat, hex } from 'binary-structures';\nexport const Platform_UUIDs = {\n    /* python -c \"import uuid;print(', '.join(map(hex, uuid.UUID('3408b638-09a9-47a0-8bfd-a0768815b665').bytes_le)))\" */\n    WebUSB: [0x38, 0xb6, 0x8, 0x34, 0xa9, 0x9, 0xa0, 0x47, 0x8b, 0xfd, 0xa0, 0x76, 0x88, 0x15, 0xb6, 0x65],\n    /* python -c \"import uuid;print(', '.join(map(hex, uuid.UUID('a8adf97c-6a20-48e4-a97c-79978eec00c7').bytes_le)))\" */\n    SimpleHID: [0x7c, 0xf9, 0xad, 0xa8, 0x20, 0x6a, 0xe4, 0x48, 0xa9, 0x7c, 0x79, 0x97, 0x8e, 0xec, 0x0, 0xc7]\n};\n/* Utility functions */\nconst assert = (func, message) => {\n    return {\n        decode: (value) => {\n            const result = func(value);\n            if (result) {\n                return value;\n            }\n            else {\n                throw new Error(message + `: ${typeof value === 'number' ? hex(value) : value}`);\n            }\n        }\n    };\n};\nconst get = (name) => (context) => context.get(name);\nexport const decode = (data) => data.toObject();\nexport const encode = (data) => {\n    const map = new Map();\n    for (const [k, v] of Object.entries(data)) {\n        map.set(k, v);\n    }\n    return map;\n};\nexport const map_transcoders = { encode, decode };\n/* Utility Parsers */\nlet null_parser = Embed(Pass);\nlet zero = Padding(0, { decode: () => 0 });\nlet BCD_version = Binary_Map({ decode })\n    .set('patch', Bits(4))\n    .set('minor', Bits(4))\n    .set('major', Uint8);\n/* HID Report Parsers */\nlet input_ouput_feature_size_1 = Embed(Binary_Map()\n    .set('data_or_constant', Bits(1))\n    .set('array_or_variable', Bits(1))\n    .set('absolute_or_relative', Bits(1))\n    .set('no_wrap_or_wrap', Bits(1))\n    .set('linear_or_nonlinear', Bits(1))\n    .set('preferred_state_or_no_preferred', Bits(1))\n    .set('no_null_position_or_null_state', Bits(1))\n    .set('not_volatile_or_volatile', Bits(1)));\nlet input_output_feature_size_2 = Embed(Binary_Map()\n    .set('embed byte 1', Embed(input_ouput_feature_size_1))\n    .set('bit_field_or_buffered_bytes', Bits(1))\n    .set('ignored', Padding({ bits: 7 })));\nlet input_output_feature_size_4 = Embed(Binary_Map()\n    .set('embed bytes 1-2', Embed(input_output_feature_size_2))\n    .set('padding', Padding({ bytes: 2 })));\nlet input_output_feature_item = Branch({\n    chooser: get('size'),\n    choices: {\n        0: null_parser,\n        1: input_ouput_feature_size_1,\n        2: input_output_feature_size_2,\n        3: input_output_feature_size_4\n    }\n});\nlet collection = Branch({\n    chooser: get('size'),\n    choices: { 0: Embed(Binary_Map().set('collection', zero)) },\n    default_choice: Embed(Binary_Map().set('collection', Uint(8, assert((value) => (value < 0x07) || (value > 0x7F), 'Invalid collection type'))))\n});\nlet usage = (default_global = true, local_item = \"usage_id\") => Branch({\n    chooser: get('size'),\n    choices: {\n        0: Embed(Binary_Map().set(default_global ? 'usage_page' : local_item, zero)),\n        1: Embed(Binary_Map().set(default_global ? 'usage_page' : local_item, Uint8)),\n        2: Embed(Binary_Map().set(default_global ? 'usage_page' : local_item, Uint16LE)),\n        3: Embed(Binary_Map().set(local_item, Uint16LE).set('usage_page', Uint16LE))\n    }\n});\nlet sized_int = (name) => Embed(Binary_Map().set(name, Branch({\n    chooser: get('size'),\n    choices: { 0: zero, 1: Int8, 2: Int16LE, 3: Int32LE }\n})));\nlet sized_uint = (name) => Embed(Binary_Map().set(name, Branch({\n    chooser: get('size'),\n    choices: { 0: zero, 1: Uint8, 2: Uint16LE, 3: Uint32LE }\n})));\nlet main_item = Branch({\n    chooser: get('tag'),\n    choices: {\n        [HID.Report_Main_Item_Tag.Input]: input_output_feature_item,\n        [HID.Report_Main_Item_Tag.Output]: input_output_feature_item,\n        [HID.Report_Main_Item_Tag.Feature]: input_output_feature_item,\n        [HID.Report_Main_Item_Tag.Collection]: collection,\n        [HID.Report_Main_Item_Tag.End_Collection]: null_parser\n    }\n});\nlet global_item = Branch({\n    chooser: get('tag'),\n    choices: {\n        [0 /* Usage_Page */]: usage(),\n        [1 /* Logical_Minimum */]: sized_int('logical_minimum'),\n        [2 /* Logical_Maximum */]: sized_int('logical_maximum'),\n        [3 /* Physical_Minimum */]: sized_int('physical_minimum'),\n        [4 /* Physical_Maximum */]: sized_int('physical_maximum'),\n        /* Parsing unit information left as an exercise to the reader. */\n        [5 /* Unit_Exponent */]: Embed(Binary_Map().set('unit_exponent', Uint(8, {\n            decode: (value) => {\n                value &= 0xF;\n                /* Only the first nibble is used */\n                if (value > 7) {\n                    value -= 0xF;\n                    /* 4-bit 2's complement */\n                }\n                return value;\n            }\n        }))),\n        [6 /* Unit */]: Embed(Binary_Map().set('unit', Uint32LE)),\n        [7 /* Report_Size */]: sized_uint('report_size'),\n        [8 /* Report_ID */]: Embed(Binary_Map().set('report_id', Uint8)),\n        [9 /* Report_Count */]: sized_uint('report_count'),\n        [10 /* Push */]: null_parser,\n        [11 /* Pop */]: null_parser\n    }\n});\nlet local_item = Branch({\n    chooser: get('tag'),\n    choices: {\n        /* Usages left as an exercise to the reader. */\n        [0 /* Usage */]: usage(false),\n        [1 /* Usage_Minimum */]: usage(false, 'usage_minimum'),\n        [2 /* Usage_Maximum */]: usage(false, 'usage_maximum'),\n        /* Physical Descriptors left as an exercise to the reader. */\n        [3 /* Designator_Index */]: sized_uint('designator_index'),\n        [4 /* Designator_Minimum */]: sized_uint('designator_minimum'),\n        [5 /* Designator_Maximum */]: sized_uint('designator_maximum'),\n        [7 /* String_Index */]: sized_uint('string_index'),\n        [8 /* String_Minimum */]: sized_uint('string_minimum'),\n        [9 /* String_Maximum */]: sized_uint('string_maximum'),\n        [10 /* Delimiter */]: sized_uint('delimiter')\n    }\n});\nlet short_item = Branch({\n    chooser: get('type'),\n    choices: {\n        [0 /* Main */]: main_item,\n        [1 /* Global */]: global_item,\n        [2 /* Local */]: local_item\n    }\n});\nlet long_item = Embed(Binary_Map()\n    .set('data_size', Uint8)\n    .set('long_item_tag', Uint(8, assert((tag) => (tag >= 0xF0), \"Invalid long_item_tag\")))\n    .set('data', Byte_Buffer(get('data_size'))));\n/* exports */\nexport let HID_item = Binary_Map({ decode })\n    .set('size', Bits(2))\n    .set('type', Bits(2))\n    .set('tag', Bits(4))\n    .set('The rest', Branch({\n    chooser: (context) => {\n        /* context.tag << 4 | context.type << 2 | context.size */\n        return context.get('tag') * 16 + context.get('type') * 4 + context.get('size');\n    },\n    choices: { 0b11111110: long_item },\n    default_choice: short_item\n}));\nexport let HID_descriptor = Binary_Map({ decode })\n    .set('length', Uint8)\n    .set('type', Uint(8, assert((data) => data === 33 /* HID */, \"Invalid Class Descriptor\")))\n    .set('version', BCD_version)\n    .set('country_code', Uint8)\n    .set('count', Uint(8, assert((count) => count > 0, \"Invalid number of descriptors\")))\n    .set('descriptors', Repeat({ count: get('count') }, Binary_Map({ decode }).set('type', Uint8).set('size', Uint16LE)));\nexport let languages_string_descriptor = Binary_Map({ decode })\n    .set('length', Uint8)\n    .set('type', Uint(8, assert((value) => value === 3 /* STRING */, \"Invalid string descriptor type\")))\n    .set('LANGID', Repeat({ count: (context) => (context.get('length') - 2) / 2 }, Uint16LE));\nconst text_decoder = new TextDecoder(\"utf-16le\");\nexport let string_descriptor = Binary_Map({ decode })\n    .set('length', Uint8)\n    .set('type', Uint(8, assert((value) => value === 3 /* STRING */, \"Invalid string descriptor type\")))\n    .set('string', Byte_Buffer((context) => (context.get('length') - 2), { decode: (buffer) => text_decoder.decode(buffer) }));\nlet webusb = Binary_Map({ decode })\n    .set('version', BCD_version)\n    .set('vendor_code', Uint8)\n    .set('landing_page_index', Uint8);\nexport var USAGE;\n(function (USAGE) {\n    USAGE[USAGE[\"page\"] = 65450] = \"page\";\n    USAGE[USAGE[\"application\"] = 0] = \"application\";\n    USAGE[USAGE[\"array\"] = 1] = \"array\";\n    USAGE[USAGE[\"object\"] = 2] = \"object\";\n    USAGE[USAGE[\"uint\"] = 3] = \"uint\";\n    USAGE[USAGE[\"int\"] = 4] = \"int\";\n    USAGE[USAGE[\"float\"] = 5] = \"float\";\n    USAGE[USAGE[\"utf8\"] = 6] = \"utf8\";\n})(USAGE || (USAGE = {}));\nlet simpleHID = Binary_Map() // Not decoded into object\n    .set('version', BCD_version)\n    .set('page', Uint(16, { little_endian: true, decode: (usage) => {\n        if (usage >= 0xFF00)\n            return usage;\n        throw new Error(`Invalid Vendor Usage page for SimpleHID Platform Descriptor: ${usage}`);\n    } }))\n    .set('application', Uint16LE)\n    .set('array', Uint16LE)\n    .set('object', Uint16LE)\n    .set('uint', Uint16LE)\n    .set('int', Uint16LE)\n    .set('float', Uint16LE)\n    .set('utf8', Uint16LE);\nlet platform_capability = Embed(Binary_Map()\n    .set('reserved', Uint(8, assert((v) => v === 0, \"Invalid reserved value\")))\n    .set('uuid', Repeat({ count: 16 }, Uint8))\n    .set('platform', Branch({\n    chooser: (context) => {\n        const UUID = context.get('uuid');\n        for (let [index, uuid] of [Platform_UUIDs.WebUSB, Platform_UUIDs.SimpleHID].entries()) {\n            /* Check for match, because Javascript Arrays can't figure out how to do equality checks */\n            if (uuid.every((v, i) => UUID[i] === v)) {\n                return index;\n            }\n        }\n        return -1;\n    },\n    choices: {\n        0: Embed(Binary_Map().set('webusb', webusb)),\n        1: Embed(Binary_Map().set('simpleHID', simpleHID))\n    },\n    default_choice: Embed(Binary_Map().set('unknown_platform', Byte_Buffer((context) => context.get('length') - 20)))\n})));\nlet capability_descriptors = Binary_Map({ decode })\n    .set('length', Uint8)\n    .set('descriptor_type', Uint(8, assert((data) => data === 16 /* DEVICE_CAPABILITY */, \"Incorrect descriptor type, should be DEVICE CAPABILITY\")))\n    .set('type', Uint(8, assert((data) => data > 0 && data < 0x0D, \"Invalid device capability type\")))\n    .set('capability', Branch({\n    chooser: get('type'),\n    choices: { [5 /* PLATFORM */]: platform_capability },\n    default_choice: Embed(Binary_Map().set('unknown_capability', Byte_Buffer((context) => context.get('length') - 3)))\n}));\nexport let BOS_descriptor = Binary_Map({ decode })\n    .set('length', Uint8)\n    .set('type', Uint(8, assert((data) => data === 15 /* BOS */, \"Invalid descriptor type, should be BOS\")))\n    .set('total_length', Uint16LE)\n    .set('capability_descriptor_count', Uint8)\n    .set('capability_descriptors', Repeat({ count: get('capability_descriptor_count') }, capability_descriptors));\n//# sourceMappingURL=parsers.js.map","/**\n * Created by riggs on 2017/9/1\n *\n * USB HID utility for WebUSB.\n */\nimport 'improved-map';\nimport { Binary_Array, Binary_Map, Repeat, Uint8, Padding, Uint, Int, Float, Utf8, Byte_Buffer } from 'binary-structures';\nimport * as HID from './HID_data';\nimport * as USB from './USB_data';\nimport { BOS_descriptor, HID_descriptor, HID_item, languages_string_descriptor, string_descriptor, map_transcoders } from './parsers';\n/*************\n * Utilities *\n *************/\nfunction hex(value) {\n    return \"0x\" + value.toString(16).padStart(2, \"0\");\n}\nfunction hex_buffer(buffer) {\n    return Array.from(new Uint8Array(buffer), hex).join(\", \");\n}\nexport class USBTransferError extends Error {\n    constructor(message, status) {\n        super(message);\n        this.name = 'USBTransferError';\n        this.status = status;\n    }\n}\nexport class ConnectionError extends Error {\n}\nexport class ReportError extends Error {\n}\nexport class DescriptorError extends Error {\n}\n/******************\n * Default Export *\n ******************/\nexport class Device {\n    constructor(...filters) {\n        this._interface_id = 0;\n        this._configuration_id = 1;\n        this.webusb_device = undefined;\n        this._HID_descriptors = new Map();\n        this._BOS_descriptors = new Map();\n        this._report_descriptors = new Map();\n        this._physical_descriptors = new Map();\n        this._reports = new Map();\n        this._string_descriptors = new Map();\n        this._max_input_length = 0;\n        this._report_ids = false;\n        this._filters = filters;\n    }\n    static verify_transfer_in(result) {\n        if (result.status !== \"ok\") {\n            throw new USBTransferError(\"HID descriptor transfer failed.\", result.status);\n        }\n        else {\n            return result.data;\n        }\n    }\n    static verify_transfer_out(result) {\n        if (result.status !== \"ok\") {\n            throw new USBTransferError(\"HID descriptor transfer failed.\", result.status);\n        }\n        else {\n            return result.bytesWritten;\n        }\n    }\n    verify_connection() {\n        if (this.webusb_device === undefined) {\n            throw new ConnectionError(\"Not connected to a device.\");\n        }\n    }\n    async verify_reports(error = false) {\n        const reports = this._reports.get(this._interface_id);\n        if (reports !== undefined) {\n            return reports;\n        }\n        else if (error) {\n            throw new ReportError(\"No valid reports.\");\n        }\n        else {\n            await this.build_reports();\n            return this.verify_reports(true);\n        }\n    }\n    async get_report_id(report_type, report_id) {\n        const reports = await this.verify_reports();\n        if (report_id === undefined && reports.hasOwnProperty(0)) {\n            return 0;\n        }\n        else if (typeof report_id === \"number\" && reports[report_type].hasOwnProperty(report_id)) {\n            return report_id;\n        }\n        else if (typeof report_id === \"string\" && reports[report_type].hasOwnProperty(report_id)) {\n            return reports[report_type][report_id];\n        }\n        else {\n            throw new Error(`Invalid ${[\"Input\", \"Output\", \"Feature\"][report_type - 1]} report: ${report_id}`);\n        }\n    }\n    async get_string_descriptor(index, language_id) {\n        this.verify_connection();\n        if (index < 0) {\n            throw new Error(\"Invalid string descriptor index\");\n        }\n        if (!this._string_descriptors.has(this._interface_id)) {\n            this._string_descriptors.set(this._interface_id, new Map());\n            await this.get_string_descriptor(0, 0);\n        }\n        if (this._string_descriptors.get(this._interface_id).has(index)) {\n            return this._string_descriptors.get(this._interface_id).get(index);\n        }\n        if (index !== 0 && language_id !== undefined && !(this._string_descriptors.get(this._interface_id).get(0).includes(language_id))) {\n            throw new Error(`Unsupported language id: ${hex(language_id)}`);\n        }\n        if (index !== 0 && language_id === undefined) {\n            language_id = this._string_descriptors.get(this._interface_id).get(0 /* String Descriptor index */)[0 /* First LANGID */];\n        }\n        let data = Device.verify_transfer_in(await this.webusb_device.controlTransferIn({\n            requestType: \"standard\",\n            recipient: \"device\",\n            request: 6 /* GET_DESCRIPTOR */,\n            value: 3 /* STRING */ * 256 + index,\n            index: language_id,\n        }, 255));\n        let result;\n        if (index === 0) {\n            result = languages_string_descriptor.parse(new DataView(data.buffer)).data.LANGID;\n        }\n        else {\n            result = string_descriptor.parse(new DataView(data.buffer)).data.string;\n        }\n        this._string_descriptors.get(this._interface_id).set(index, result);\n        return result;\n    }\n    async get_BOS_descriptor() {\n        this.verify_connection();\n        if (this.BOS_descriptor === undefined) {\n            let data = Device.verify_transfer_in(await this.webusb_device.controlTransferIn({\n                requestType: \"standard\",\n                recipient: \"device\",\n                request: 6 /* GET_DESCRIPTOR */,\n                value: 15 /* BOS */ * 256,\n                index: 0\n            }, 5 /* BOS header size */));\n            let total_length = data.getUint16(2, true);\n            data = Device.verify_transfer_in(await this.webusb_device.controlTransferIn({\n                requestType: \"standard\",\n                recipient: \"device\",\n                request: 6 /* GET_DESCRIPTOR */,\n                value: 15 /* BOS */ * 256,\n                index: 0\n            }, total_length));\n            if (data.byteLength < total_length) {\n                throw new USBTransferError(`Invalid length, ${total_length}, for BOS descriptor: ${hex_buffer(data.buffer)}`, 'ok');\n            }\n            this._BOS_descriptors.set(this._interface_id, this.BOS_descriptor_parser(total_length).parse(new DataView(data.buffer)).data);\n        }\n        return this.BOS_descriptor;\n    }\n    async get_HID_descriptor() {\n        this.verify_connection();\n        if (this.HID_descriptor === undefined) {\n            let length = 9;\n            let data = await Device.get_HID_class_descriptor(this.webusb_device, 33 /* HID */, 0, length, this._interface_id, 6 /* GET */);\n            let returned_length = data.getUint8(0);\n            if (length < returned_length) {\n                length = returned_length;\n                data = await Device.get_HID_class_descriptor(this.webusb_device, 33 /* HID */, 0, length, this._interface_id, 6 /* GET */);\n            }\n            if (data.byteLength < length) {\n                throw new USBTransferError(\"Invalid HID descriptor length: \" + hex_buffer(data.buffer), \"ok\");\n            }\n            this._HID_descriptors.set(this._interface_id, this.HID_descriptor_parser(length).parse(new DataView(data.buffer)).data);\n        }\n        return this.HID_descriptor;\n    }\n    async get_report_descriptor() {\n        this.verify_connection();\n        if (this.report_descriptor === undefined) {\n            if (this.HID_descriptor === undefined) {\n                await this.get_HID_descriptor();\n            }\n            /* Get Report descriptor from HID descriptor */\n            let reports = this.HID_descriptor.descriptors\n                .filter(({ type }) => type === 34 /* Report */);\n            if (reports.length > 1) {\n                throw new USBTransferError(\"Multiple Report descriptors specified in HID descriptor.\", \"ok\");\n            }\n            else if (reports.length === 0) {\n                throw new USBTransferError(\"Report descriptor missing from HID descriptor.\", \"ok\");\n            }\n            let length = reports[0].size;\n            let data = await Device.get_HID_class_descriptor(this.webusb_device, 34 /* Report */, 0, length, this._interface_id, 6 /* GET */);\n            if (data.byteLength !== length) {\n                throw new USBTransferError(\"Invalid HID descriptor length: \" + hex_buffer(data.buffer), \"ok\");\n            }\n            this._report_descriptors.set(this._interface_id, this.report_descriptor_parser(length).parse(new DataView(data.buffer)).data);\n        }\n        return this.report_descriptor;\n    }\n    async get_physical_descriptor(index, length = undefined) {\n        this.verify_connection();\n        if (this.physical_descriptor === undefined) {\n            this._physical_descriptors.set(this._interface_id, []);\n        }\n        if (this.physical_descriptor[index] === undefined) {\n            if (this.HID_descriptor === undefined) {\n                await this.get_HID_descriptor();\n            }\n            let descriptors = this.HID_descriptor.descriptors\n                .filter(({ type, size }) => type === 35 /* Physical */);\n            if (descriptors.length > 1) {\n                throw new USBTransferError(\"Multiple Physical descriptors specified in HID descriptor.\", \"ok\");\n            }\n            else if (descriptors.length === 0) {\n                throw new USBTransferError(\"Physical descriptor not present in HID descriptor.\", \"ok\");\n            }\n            if (index === 0) {\n                length = descriptors[0].size;\n            }\n            else if (length === undefined) {\n                throw new Error(\"Undefined Physical descriptor length.\");\n            }\n            let data = await Device.get_HID_class_descriptor(this.webusb_device, 35 /* Physical */, index, length, this._interface_id, 6 /* GET */);\n            if (data.byteLength !== length) {\n                throw new USBTransferError(\"Invalid HID descriptor length: \" + hex_buffer(data.buffer), \"ok\");\n            }\n            this.physical_descriptor[index] = this.physical_descriptor_parser(length).parse(new DataView(data.buffer)).data;\n        }\n        return this.physical_descriptor[index];\n    }\n    async build_reports() {\n        if (this.reports === undefined) {\n            if (this.report_descriptor === undefined) {\n                await this.get_report_descriptor();\n            }\n            if (this.BOS_descriptor === undefined) {\n                await this.get_BOS_descriptor();\n            }\n            const usage_map = new Map();\n            usage_map.set('version', { major: 1, minor: 0, patch: 0 });\n            usage_map.set('page', 65450 /* page */);\n            usage_map.set('application', 0 /* application */);\n            usage_map.set('array', 1 /* array */);\n            usage_map.set('object', 2 /* object */);\n            usage_map.set('uint', 3 /* uint */);\n            usage_map.set('int', 4 /* int */);\n            usage_map.set('float', 5 /* float */);\n            usage_map.set('utf8', 6 /* utf8 */);\n            for (const descriptor of this.BOS_descriptor.capability_descriptors) {\n                if (descriptor.hasOwnProperty('simpleHID')) {\n                    const d = descriptor.simpleHID;\n                    // TODO: Better version compatibility checking\n                    if (d.get('version').major > 1) {\n                        throw new DescriptorError(`Incompatible SimpleHID version: ${d.get('version').major}`);\n                    }\n                    usage_map.update(d);\n                    break;\n                }\n            }\n            const usage = Object.freeze(usage_map.toObject());\n            // FIXME: Make objects for happy API\n            const reports = {\n                input: {},\n                output: {},\n                feature: {}\n            };\n            /* alias `device.reports.input` to `device.report[Input]` */\n            reports[1 /* Input */] = reports.input;\n            reports[2 /* Output */] = reports.output;\n            reports[3 /* Feature */] = reports.feature;\n            const collection_stack = [];\n            const global_state_stack = [];\n            let delimiter_stack = [];\n            let delimited = false;\n            let empty_local_state = () => new Map([['usage_stack', []], ['string_stack', []], ['designator_stack', []]]);\n            const states = new Map([\n                [1 /* Global */, new Map()],\n                [2 /* Local */, empty_local_state()],\n            ]);\n            const add_raw_tags = (item) => {\n                /* Strips 'type', 'tag', and 'size' from item, then adds whatever is left to the correct state table */\n                states.get(item.type).update(Object.entries(item).slice(3));\n            };\n            const build_item = (usage, size) => {\n                if (size === 0) {\n                    return Padding(0);\n                }\n                switch (usage) {\n                    case undefined:\n                        if (size > 7) {\n                            throw new DescriptorError(`Invalid Padding size in HID descriptor: ${size}`);\n                        }\n                        return Padding(size);\n                    case 3 /* uint */:\n                        if (![1, 2, 3, 4, 5, 6, 7, 8, 16, 32, 64].includes(size)) {\n                            throw new DescriptorError(`Invalid Uint size in HID descriptor: ${size}`);\n                        }\n                        return Uint(size);\n                    case 4 /* int */:\n                        if (![8, 16, 32].includes(size)) {\n                            throw new DescriptorError(`Invalid Int size in HID descriptor: ${size}`);\n                        }\n                        return Int(size);\n                    case 5 /* float */:\n                        if (![32, 64].includes(size)) {\n                            throw new DescriptorError(`Invalid Float size in HID descriptor: ${size}`);\n                        }\n                        return Float(size);\n                    case 6 /* utf8 */:\n                        if (size % 8 !== 0) {\n                            throw new DescriptorError(`Invalid Utf-8 size in HID descriptor: ${size}`);\n                        }\n                        return Utf8(size, { little_endian: true });\n                    default:\n                        throw new DescriptorError(`Invalid Usage in HID descriptor: ${usage}`);\n                }\n            };\n            const data_item = {\n                [HID.Report_Main_Item_Tag.Input]: 1 /* Input */,\n                [HID.Report_Main_Item_Tag.Output]: 2 /* Output */,\n                [HID.Report_Main_Item_Tag.Feature]: 3 /* Feature */,\n            };\n            for (const item of this.report_descriptor) {\n                switch (item.type) {\n                    case 1 /* Global */:\n                        switch (item.tag) {\n                            case 0 /* Usage_Page */:\n                            case 1 /* Logical_Minimum */:\n                            case 2 /* Logical_Maximum */:\n                            case 3 /* Physical_Minimum */:\n                            case 4 /* Physical_Maximum */:\n                            case 6 /* Unit */:\n                            case 5 /* Unit_Exponent */:\n                            case 7 /* Report_Size */:\n                            case 9 /* Report_Count */:\n                                add_raw_tags(item);\n                                break;\n                            case 8 /* Report_ID */:\n                                this._report_ids = true;\n                                add_raw_tags(item);\n                                break;\n                            case 10 /* Push */:\n                                global_state_stack.push(new Map(states.get(1 /* Global */).entries()));\n                                break;\n                            case 11 /* Pop */:\n                                let g = states.get(1 /* Global */);\n                                let s = global_state_stack.pop() || new Map();\n                                g.clear();\n                                g.update(s);\n                                break;\n                        }\n                        break;\n                    case 2 /* Local */:\n                        switch (item.tag) {\n                            case 0 /* Usage */:\n                            case 1 /* Usage_Minimum */:\n                            case 2 /* Usage_Maximum */:\n                            case 3 /* Designator_Index */:\n                            case 4 /* Designator_Minimum */:\n                            case 5 /* Designator_Maximum */:\n                            case 7 /* String_Index */:\n                            case 8 /* String_Minimum */:\n                            case 9 /* String_Maximum */:\n                                add_raw_tags(item);\n                                break;\n                            case 10 /* Delimiter */:\n                                let delimiter = item.delimiter;\n                                if (delimiter === 1 && !delimited) {\n                                    delimited = true;\n                                }\n                                else if (delimiter === 0 && delimited) {\n                                    delimiter_stack.push(states.get(2 /* Local */));\n                                    states.set(2 /* Local */, empty_local_state());\n                                    delimited = false;\n                                } // Ignore other delimiter tags because they don't make sense.\n                                break;\n                        }\n                        break;\n                    case 0 /* Main */:\n                        /* Set the state for the Main item from the Global & Local states */\n                        const state = new Map();\n                        if (delimiter_stack.length > 0) {\n                            /* Only care about the first delimited set */\n                            state.update(delimiter_stack[0]);\n                            delimiter_stack = [];\n                        }\n                        state.update(...states.values());\n                        /* Flush local state */\n                        states.set(2 /* Local */, empty_local_state());\n                        switch (item.tag) {\n                            case HID.Report_Main_Item_Tag.Collection:\n                                switch (item.collection) {\n                                    case 1 /* Application */:\n                                        if (state.get('usage_page') === usage.page && state.get('usage_id') === usage.application) {\n                                            collection_stack.push(true);\n                                        }\n                                        else {\n                                            collection_stack.push(false); // Not SimpleHID compliant\n                                        }\n                                        break;\n                                    case 0 /* Physical */:\n                                    case 2 /* Logical */:\n                                    case 3 /* Report */:\n                                        /* Do nothing if Application Collection doesn't have correct Usage. */\n                                        if (collection_stack.length === 0 || collection_stack[0] === false) {\n                                            break;\n                                        }\n                                        const report_id = state.get('report_id');\n                                        let struct;\n                                        if (state.get('usage_page') === usage.page && state.get('usage_id') == usage.object) {\n                                            struct = Binary_Map(map_transcoders);\n                                        }\n                                        else {\n                                            struct = Binary_Array();\n                                        }\n                                        struct.id = report_id;\n                                        struct.byte_length = 0;\n                                        if (state.has('string_index')) {\n                                            struct.name = await this.get_string_descriptor(state.get('string_index'));\n                                        }\n                                        collection_stack.push({ struct, type: item.collection });\n                                        break;\n                                    case 4 /* Named_Array */: /* I have no idea WTF this is supposed to do */\n                                    case 5 /* Usage_Switch */: /* This application doesn't care */\n                                    case 6 /* Usage_Modifier */: /* This application doesn't care */\n                                    default:/* Reserved or Vendor collection values are ignored. */ \n                                        break;\n                                }\n                                break;\n                            case HID.Report_Main_Item_Tag.Input:\n                            case HID.Report_Main_Item_Tag.Output:\n                            case HID.Report_Main_Item_Tag.Feature:\n                                const count = state.get('report_count');\n                                const size = state.get('report_size');\n                                if (size === undefined) {\n                                    throw new ReportError(`Size not defined for ${HID.Report_Main_Item_Tag[item.tag]} Report`);\n                                }\n                                else if (count === undefined) {\n                                    throw new ReportError(`Count not defined for ${HID.Report_Main_Item_Tag[item.tag]} Report`);\n                                }\n                                if (collection_stack.length === 0 || collection_stack[0] === false) {\n                                    const id = state.get('report_id');\n                                    const type = data_item[item.tag];\n                                    const report_type = reports[type];\n                                    if (!report_type.hasOwnProperty(id)) {\n                                        const array = Binary_Array();\n                                        array.byte_length = 0;\n                                        report_type[id] = array;\n                                    }\n                                    const report = report_type[id];\n                                    for (let i = 0; i < count; i++) {\n                                        report.push(Byte_Buffer(size / 8));\n                                    }\n                                    report.byte_length += (size / 8) * count;\n                                    if (type === 1 /* Input */ && report.byte_length > this._max_input_length) {\n                                        this._max_input_length = report.byte_length;\n                                    }\n                                }\n                                else if (collection_stack.length === 1) {\n                                    throw new ReportError(`All Input, Output or Feature Reports must be enclosed in a Report Collection.`);\n                                }\n                                else if (state.get('usage_page') === usage.page) {\n                                    const usage = state.get('usage_id');\n                                    const { struct } = collection_stack[collection_stack.length - 1];\n                                    const item_struct = build_item(usage, size);\n                                    if (struct instanceof Array) {\n                                        for (let i = 0; i < count; i++) {\n                                            struct.push(item_struct);\n                                        }\n                                    }\n                                    else if (struct instanceof Map) {\n                                        if (!state.has('string_index')) {\n                                            throw new ReportError(`Missing String Index for variable name in Report ID ${state.get('report_id')}`);\n                                        }\n                                        const name = await this.get_string_descriptor(state.get('string_index'));\n                                        if (struct.has(name)) {\n                                            const thing = struct.get(name);\n                                            let array;\n                                            if (thing instanceof Array) {\n                                                array = thing;\n                                            }\n                                            else {\n                                                array = Binary_Array();\n                                                array.push(thing);\n                                            }\n                                            for (let i = 0; i < count; i++) {\n                                                array.push(item_struct);\n                                            }\n                                            struct.set(name, array);\n                                        }\n                                        else {\n                                            if (count === 1) {\n                                                struct.set(name, item_struct);\n                                            }\n                                            else {\n                                                const array = Binary_Array();\n                                                for (let i = 0; i < count; i++) {\n                                                    array.push(item_struct);\n                                                }\n                                                struct.set(name, array);\n                                            }\n                                        }\n                                    }\n                                    struct.byte_length += (size / 8) * count;\n                                    struct.type = data_item[item.tag];\n                                }\n                                break;\n                            case HID.Report_Main_Item_Tag.End_Collection:\n                                if (collection_stack.length === 0) {\n                                    break;\n                                }\n                                const collection = collection_stack.pop();\n                                if (typeof collection === 'boolean') {\n                                    break;\n                                }\n                                const { struct } = collection;\n                                if (collection.type === 3 /* Report */) {\n                                    if (struct.id === undefined) {\n                                        if (this._report_ids) {\n                                            throw new ReportError(`No Report ID defined for Report Collection`);\n                                        }\n                                        else {\n                                            struct.id = 0;\n                                        }\n                                    }\n                                    const type = struct.type;\n                                    if (struct.name !== undefined) {\n                                        reports[type][struct.name] = struct.id;\n                                    }\n                                    reports[type][struct.id] = struct;\n                                    if (type === 1 /* Input */ && struct.byte_length > this._max_input_length) {\n                                        this._max_input_length = struct.byte_length;\n                                    }\n                                }\n                                else {\n                                    const parent = collection_stack[collection_stack.length - 1];\n                                    if (typeof parent === 'boolean') {\n                                        break;\n                                    } // Ignore Logical/Physical Collections outside of Report Collections\n                                    if (parent.struct instanceof Map) {\n                                        parent.struct.set(struct.name, struct);\n                                    }\n                                    else if (parent.struct instanceof Array) {\n                                        parent.struct.push(struct);\n                                    }\n                                    parent.struct.byte_length += struct.byte_length;\n                                }\n                                break;\n                        }\n                        break;\n                }\n            }\n            this._reports.set(this._interface_id, reports);\n        }\n        return this.reports;\n    }\n    /**************************\n     * External Parser Access *\n     **************************/\n    /* Overwrite to use different parsers. */\n    BOS_descriptor_parser(length) {\n        return BOS_descriptor;\n    }\n    HID_descriptor_parser(length) {\n        return HID_descriptor;\n    }\n    report_descriptor_parser(bytes) {\n        return Repeat({ bytes }, HID_item);\n    }\n    /* Interpreting Physical Descriptor left as an exercise for the reader. */\n    physical_descriptor_parser(bytes) {\n        return Repeat({ bytes }, Uint8);\n    }\n    /***************************\n     * Public Attribute Access *\n     ***************************/\n    /* Getters cannot dynamic generate missing descriptors/reports because they're inherently synchronous. */\n    get interface_id() {\n        return this._interface_id;\n    }\n    get configuration_id() {\n        return this._configuration_id;\n    }\n    get HID_descriptor() {\n        return this._HID_descriptors.get(this._interface_id);\n    }\n    get BOS_descriptor() {\n        return this._BOS_descriptors.get(this._interface_id);\n    }\n    get report_descriptor() {\n        return this._report_descriptors.get(this._interface_id);\n    }\n    get physical_descriptor() {\n        return this._physical_descriptors.get(this._interface_id);\n    }\n    get reports() {\n        return this._reports.get(this._interface_id);\n    }\n    /******************\n     * Public Methods *\n     ******************/\n    async set_configuration_id(id) {\n        this.verify_connection();\n        throw Error(\"Not Implemented\");\n    }\n    async set_interface_id(id) {\n        this.verify_connection();\n        await this.webusb_device.claimInterface(id);\n        this._interface_id = id;\n        await this.build_reports();\n    }\n    async connect(...filters) {\n        if (this === undefined) {\n            /* Instantiate class, then connect */\n            return await (new Device(...filters)).connect();\n        }\n        if (this.webusb_device !== undefined) {\n            /* Already connected */\n            return this;\n        }\n        let device = await navigator.usb.requestDevice({ filters: [...filters, ...this._filters] });\n        await device.open();\n        if (device.configuration === null) {\n            await device.selectConfiguration(this._configuration_id);\n        }\n        await device.claimInterface(this._interface_id);\n        this.webusb_device = device;\n        await this.build_reports();\n        return this;\n    }\n    static async connect(...filters) {\n        /* Instantiate class, then connect */\n        return await (new Device(...filters)).connect();\n    }\n    async receive() {\n        this.verify_connection();\n        let endpoint_id;\n        for (const endpoint of this.webusb_device.configuration.interfaces[this._interface_id].alternate.endpoints) {\n            if (endpoint.direction === 'in' && endpoint.type === 'interrupt') {\n                endpoint_id = endpoint.endpointNumber;\n                break;\n            }\n        }\n        const result = await this.webusb_device.transferIn(endpoint_id, this._max_input_length);\n        const data_view = Device.verify_transfer_in(result);\n        let report_id = 0;\n        let byte_offset = 0;\n        if (this._report_ids) {\n            report_id = data_view.getUint8(0);\n            byte_offset++;\n        }\n        const report = this.reports[1 /* Input */][endpoint_id];\n        return { id: report_id, data: report.parse(data_view, { byte_offset }).data };\n    }\n    async send(report_id, data) {\n        this.verify_connection();\n        const { id, length, data_view } = await output(this, 2 /* Output */, report_id, data);\n        let endpoint_id = undefined;\n        for (const endpoint of this.webusb_device.configuration.interfaces[this._interface_id].alternate.endpoints) {\n            if (endpoint.direction === 'out' && endpoint.type === 'interrupt') {\n                endpoint_id = endpoint.endpointNumber;\n                break;\n            }\n        }\n        let result;\n        if (endpoint_id === undefined) {\n            result = await this.webusb_device.controlTransferOut({\n                requestType: \"class\",\n                recipient: \"interface\",\n                request: 9 /* SET_REPORT */,\n                value: 2 /* Output */ * 256 + id,\n                index: this._interface_id\n            }, data_view);\n        }\n        else {\n            result = await this.webusb_device.transferOut(endpoint_id, data_view.buffer);\n        }\n        return length === Device.verify_transfer_out(result);\n    }\n    async get_feature(report_id) {\n        this.verify_connection();\n        const id = await this.get_report_id(3 /* Feature */, report_id);\n        const report = this.reports[3 /* Feature */][id];\n        let length = Math.ceil(report.byte_length);\n        let byte_offset = 0;\n        if (this._report_ids) {\n            length++;\n            byte_offset++;\n        }\n        let result = await this.webusb_device.controlTransferIn({\n            requestType: \"class\",\n            recipient: \"interface\",\n            request: 1 /* GET_REPORT */,\n            value: 3 /* Feature */ * 256 + id,\n            index: this._interface_id\n        }, length);\n        const data_view = Device.verify_transfer_in(result);\n        const data = report.parse(data_view, { byte_offset }).data;\n        return { data, id };\n    }\n    async set_feature(report_id, data) {\n        this.verify_connection();\n        const { id, length, data_view } = await output(this, 3 /* Feature */, report_id, data);\n        let result = await this.webusb_device.controlTransferOut({\n            requestType: \"class\",\n            recipient: \"interface\",\n            request: 9 /* SET_REPORT */,\n            value: 3 /* Feature */ * 256 + id,\n            index: this._interface_id\n        }, data_view);\n        return length === Device.verify_transfer_out(result);\n    }\n    static async get_HID_class_descriptor(device, type, index, length, interface_id, request) {\n        let result = await device.controlTransferIn({\n            requestType: \"standard\",\n            recipient: \"interface\",\n            request: request,\n            value: type * 256 + index,\n            index: interface_id\n        }, length);\n        return Device.verify_transfer_in(result);\n    }\n}\nasync function output(device, report_type, report_id, data) {\n    let id;\n    if (typeof report_id === \"number\" || typeof report_id === \"string\") {\n        id = await device.get_report_id(report_type, report_id);\n    }\n    else {\n        id = await device.get_report_id(report_type, undefined);\n        data = report_id;\n    }\n    const report = device.reports[report_type][id];\n    let length = Math.ceil(report.byte_length);\n    let byte_offset = 0;\n    let data_view;\n    if (id !== 0) {\n        length++;\n        byte_offset++;\n        data_view = new DataView(new ArrayBuffer(length));\n        data_view.setUint8(0, id);\n    }\n    else {\n        data_view = new DataView(new ArrayBuffer(length));\n    }\n    report.pack(data, { data_view, byte_offset });\n    return { id, length, data_view };\n}\nnavigator.simpleHID = Device;\n//# sourceMappingURL=simpleHID.js.map"],"names":["hex","hex_buffer","Request_Type","HID.Report_Main_Item_Tag"],"mappings":"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"}